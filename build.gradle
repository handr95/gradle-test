apply plugin: 'java'
apply plugin: 'application'

compileJava.options.encoding = 'UTF-8'

run {
    if (project.hasProperty("args")) {
        args project.args.split('\\s')
    }
}

mainClassName = "ParamPDF"

task initJavaFolder << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task printJavafolder << {
    sourceSets {
        main {
            println "java.srcDirs = ${java.srcDirs}"
            println "resources.srcDirs = ${resources.srcDirs}"
        }
    }
}

jar {
    from files(sourceSets.main.output.classesDir)
    from { configurations.compile.collect { zipTree(it) } } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes "Main-Class": "ParamPDF"
    }
}

task srcZip(type:Zip) {
    classifier = 'src'
    from sourceSets*.allSource
    destinationDir = file("$buildDir/myzips")

    archiveName = "$project.name-source.zip"
}

task srcTar(type:Tar) {
    classifier = 'src'
    from sourceSets*.allSource
    destinationDir = file("$buildDir/myzips")

    archiveName = "$project.name-sources.tar.gz"

    compression = Compression.GZIP
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.itextpdf', name: 'itextpdf', version: '5.0.6'

    compile 'org.slf4j:slf4j-api:1.7.5'
    testCompile 'junit:junit:4.11'
}